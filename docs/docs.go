// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/admin/characters": {
            "post": {
                "description": "Create a new historical character (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Create Character (Admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Admin internal password",
                        "name": "X-Internal-Password",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Character data",
                        "name": "character",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Character"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.CharacterResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/admin/lessons/new": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new lesson using structured request (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Create Lesson from Request (Admin)",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cadmin_token\u003e",
                        "description": "Admin Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Lesson creation request",
                        "name": "lessonRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateLessonRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.LessonResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/admin/lessons/{lessonId}/media": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all media assets for a lesson (Admin only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get Lesson Media (Admin)",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cadmin_token\u003e",
                        "description": "Admin Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Lesson ID",
                        "name": "lessonId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.LessonMediaResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/admin/lessons/{lessonId}/media/batch": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Upload multiple media files for a lesson at once (Admin only)",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Batch Upload Media (Admin)",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cadmin_token\u003e",
                        "description": "Admin Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Lesson ID",
                        "name": "lessonId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Video file",
                        "name": "video",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Subtitle file",
                        "name": "subtitle",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.BatchMediaUploadResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/admin/lessons/{lessonId}/subtitle": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Upload subtitle file for lesson video (Admin only)",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Upload Lesson Subtitle (Admin)",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cadmin_token\u003e",
                        "description": "Admin Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Lesson ID",
                        "name": "lessonId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Subtitle file (VTT, SRT)",
                        "name": "subtitle",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.MediaUploadResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/admin/lessons/{lessonId}/video": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Upload MP4 video file for lesson storytelling (Admin only)",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Upload Lesson Video (Admin)",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cadmin_token\u003e",
                        "description": "Admin Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Lesson ID",
                        "name": "lessonId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Video file (MP4, MOV, AVI)",
                        "name": "video",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.MediaUploadResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/admin/media/assets/{assetId}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a media asset and its physical file (Admin only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Delete Media Asset (Admin)",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cadmin_token\u003e",
                        "description": "Admin Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Media Asset ID",
                        "name": "assetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/admin/media/statistics": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get statistics about media assets and usage (Admin only)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get Media Statistics (Admin)",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cadmin_token\u003e",
                        "description": "Admin Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/admin/users": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get list of all users (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get all users (Admin)",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search term",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.AdminUserListResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/admin/users/{userId}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update user information (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Update user (Admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User update data",
                        "name": "updateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AdminUpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.AdminUserInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Soft delete user (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Delete user (Admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/change-password": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Change user password (requires authentication)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Change password",
                "parameters": [
                    {
                        "description": "Current and new password",
                        "name": "changeRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ChangePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/content/characters": {
            "get": {
                "description": "Get list of historical characters with filtering options",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "content"
                ],
                "summary": "Get Characters",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by dynasty",
                        "name": "dynasty",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by rarity",
                        "name": "rarity",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.CharacterCollectionResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/content/characters/{characterId}": {
            "get": {
                "description": "Get detailed information about a specific character",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "content"
                ],
                "summary": "Get Character",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Character ID",
                        "name": "characterId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.CharacterResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/content/characters/{characterId}/lessons": {
            "get": {
                "description": "Get all lessons for a specific character",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "content"
                ],
                "summary": "Get Character Lessons",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Character ID",
                        "name": "characterId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.LessonResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/content/dynasties": {
            "get": {
                "description": "Get all dynasties",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "content"
                ],
                "summary": "Get Dynasties",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/content/eras": {
            "get": {
                "description": "Get all eras",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "content"
                ],
                "summary": "Get Eras",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/content/lessons/questions/answer": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Submit answer for individual question in a lesson",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "content"
                ],
                "summary": "Submit Question Answer",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cuser_token\u003e",
                        "description": "User Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Question answer request",
                        "name": "submitRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SubmitQuestionAnswerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.SubmitQuestionAnswerResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/content/lessons/status": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Check current lesson completion status and score",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "content"
                ],
                "summary": "Check Lesson Status",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cuser_token\u003e",
                        "description": "User Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Lesson status request",
                        "name": "statusRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CheckLessonStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.CheckLessonStatusResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/content/lessons/validate": {
            "post": {
                "description": "Validate user answers for a lesson and return score",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "content"
                ],
                "summary": "Validate Lesson Answers",
                "parameters": [
                    {
                        "description": "Validation request",
                        "name": "validateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ValidateLessonRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.ValidateLessonResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/content/lessons/{lessonId}": {
            "get": {
                "description": "Get detailed lesson content including questions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "content"
                ],
                "summary": "Get Lesson",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Lesson ID",
                        "name": "lessonId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.LessonResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/content/search": {
            "get": {
                "description": "Search characters and content with various filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "content"
                ],
                "summary": "Search Content",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search query",
                        "name": "query",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by dynasty",
                        "name": "dynasty",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by rarity",
                        "name": "rarity",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit results",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.SearchResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/content/timeline": {
            "get": {
                "description": "Get the historical timeline with eras and dynasties",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "content"
                ],
                "summary": "Get Timeline",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.TimelineCollectionResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/forgot-password": {
            "post": {
                "description": "Send password reset email to user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Request password reset",
                "parameters": [
                    {
                        "description": "Email address",
                        "name": "forgotRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ForgotPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/guest/session": {
            "post": {
                "description": "This endpoint creates a new guest session or retrieves an existing one based on device ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "guest"
                ],
                "summary": "Create or Get Guest Session",
                "parameters": [
                    {
                        "description": "Create session request",
                        "name": "createSessionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateSessionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/guest/session/{sessionId}/hearts/add": {
            "post": {
                "description": "This endpoint adds hearts to a guest session when an ad is watched",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "guest"
                ],
                "summary": "Add Hearts from Ad",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "sessionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/guest/session/{sessionId}/hearts/lose": {
            "post": {
                "description": "This endpoint deducts a heart from a guest session when a lesson is failed",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "guest"
                ],
                "summary": "Lose Heart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "sessionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/guest/session/{sessionId}/lesson/complete": {
            "post": {
                "description": "This endpoint marks a lesson as completed for a guest session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "guest"
                ],
                "summary": "Complete Lesson",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "sessionId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Complete lesson request",
                        "name": "completeLessonRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CompleteLessonRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/guest/session/{sessionId}/lesson/{lessonId}/access": {
            "get": {
                "description": "This endpoint checks if a guest session can access a specific lesson",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "guest"
                ],
                "summary": "Check Lesson Access",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "sessionId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Lesson ID",
                        "name": "lessonId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.LessonAccessResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/guest/session/{sessionId}/progress": {
            "get": {
                "description": "This endpoint retrieves the progress of a guest session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "guest"
                ],
                "summary": "Get Guest Progress",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "sessionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/leaderboard/all-time": {
            "get": {
                "description": "Get all-time leaderboard rankings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leaderboard"
                ],
                "summary": "Get All Time Leaderboard",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit results (default 50)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.LeaderboardResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/leaderboard/monthly": {
            "get": {
                "description": "Get monthly leaderboard rankings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leaderboard"
                ],
                "summary": "Get Monthly Leaderboard",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit results (default 50)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.LeaderboardResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/leaderboard/weekly": {
            "get": {
                "description": "Get weekly leaderboard rankings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leaderboard"
                ],
                "summary": "Get Weekly Leaderboard",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit results (default 50)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.LeaderboardResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/login": {
            "post": {
                "description": "Authenticate user and return access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "loginRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.LoginResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/logout": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Invalidate current session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Logout user",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cuser_token\u003e",
                        "description": "User Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "session_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/logout-all": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Invalidate all sessions for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Logout from all devices",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cuser_token\u003e",
                        "description": "User Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "session_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/refresh": {
            "post": {
                "description": "Generate new access token using refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Refresh access token",
                "parameters": [
                    {
                        "description": "Refresh token",
                        "name": "refreshRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RefreshTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.LoginResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/register": {
            "post": {
                "description": "Create a new user account with email verification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "Registration details",
                        "name": "registerRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.RegisterResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/resend-verification": {
            "post": {
                "description": "Send a new verification email to user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Resend verification email",
                "parameters": [
                    {
                        "description": "Email address",
                        "name": "resendRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ResendVerificationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/reset-password": {
            "post": {
                "description": "Reset user password with reset token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Reset password",
                "parameters": [
                    {
                        "description": "Reset token and new password",
                        "name": "resetRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ResetPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/user/audit-logs": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get user authentication audit logs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get audit logs",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.AuditLogResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/user/collection": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get user's character collection and achievements",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get User Collection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "UserID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "Bearer \u003cuser_token\u003e",
                        "description": "User Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.CollectionResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/user/hearts": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get current heart status and reset information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get Heart Status",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cuser_token\u003e",
                        "description": "User Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.HeartStatusResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/user/hearts/add": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Add hearts from ads or other sources",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Add User Hearts",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cuser_token\u003e",
                        "description": "User Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Add hearts request",
                        "name": "addHeartsRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AddHeartsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.HeartStatusResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/user/hearts/lose": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Deduct a heart when user fails a lesson",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Lose User Heart",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cuser_token\u003e",
                        "description": "User Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.HeartStatusResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/user/initialize": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Initialize user profile after first login (zodiac setup)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Initialize User Profile",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cuser_token\u003e",
                        "description": "User Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Birth year for zodiac",
                        "name": "birthYear",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.UserProgressResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/user/lesson/complete": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Complete a lesson for registered user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Complete User Lesson",
                "parameters": [
                    {
                        "description": "Complete lesson request",
                        "name": "completeLessonRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CompleteLessonRequest"
                        }
                    },
                    {
                        "type": "string",
                        "default": "Bearer \u003cuser_token\u003e",
                        "description": "User Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.CompleteLessonResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/user/lesson/{lessonId}/access": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Check if user can access a specific lesson",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Check User Lesson Access",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Lesson ID",
                        "name": "lessonId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "Bearer \u003cuser_token\u003e",
                        "description": "User Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.LessonAccessResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/user/profile": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get current user's profile information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get User Profile",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cuser_token\u003e",
                        "description": "User Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.UserProfileResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update user profile information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update User Profile",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cuser_token\u003e",
                        "description": "User Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Update profile request",
                        "name": "updateProfileRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.UserProfileResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/user/progress": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get current user's game progress",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get User Progress",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cuser_token\u003e",
                        "description": "User Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.UserProgressResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/user/security": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get user security settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get security settings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.SecuritySettings"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update user security settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update security settings",
                "parameters": [
                    {
                        "description": "Security settings",
                        "name": "updateRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateSecuritySettingsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.SecuritySettings"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/user/sessions": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get list of active user sessions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get user sessions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.SessionListResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/user/sessions/{sessionId}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Revoke a specific user session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Revoke user session",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "sessionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/user/share": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Share user achievement or progress on social media",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Share Achievement",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cuser_token\u003e",
                        "description": "User Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Share request",
                        "name": "shareRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ShareRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.ShareResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/username/check/{username}": {
            "get": {
                "description": "Check if a username is available for registration",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Check Username Availability",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username to check",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/verify-email": {
            "get": {
                "description": "Verify user email with verification token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Verify email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Verification token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "This endpoint checks the health of the service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Ping",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/shared.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.AchievementResponse": {
            "type": "object",
            "properties": {
                "badge_url": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "unlocked_at": {
                    "type": "string"
                },
                "xp_reward": {
                    "type": "integer"
                }
            }
        },
        "dto.AddHeartsRequest": {
            "type": "object",
            "required": [
                "amount",
                "source"
            ],
            "properties": {
                "amount": {
                    "type": "integer",
                    "maximum": 10,
                    "minimum": 1
                },
                "source": {
                    "description": "\"ad\", \"purchase\", \"daily_reset\"",
                    "type": "string",
                    "enum": [
                        "ad",
                        "purchase",
                        "daily_reset"
                    ]
                }
            }
        },
        "dto.AdminUpdateUserRequest": {
            "type": "object",
            "properties": {
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "user",
                        "admin",
                        "moderator"
                    ],
                    "example": "admin"
                }
            }
        },
        "dto.AdminUserInfo": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2023-01-01T00:00:00Z"
                },
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "email_verified": {
                    "type": "boolean",
                    "example": true
                },
                "failed_attempts": {
                    "type": "integer",
                    "example": 0
                },
                "id": {
                    "type": "string",
                    "example": "usr_123456789"
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "last_login_at": {
                    "type": "string",
                    "example": "2023-01-15T10:30:00Z"
                },
                "locked_until": {
                    "type": "string",
                    "example": "2023-01-15T12:00:00Z"
                },
                "role": {
                    "type": "string",
                    "example": "user"
                },
                "username": {
                    "type": "string",
                    "example": "johndoe"
                }
            }
        },
        "dto.AdminUserListResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer",
                    "example": 20
                },
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "total": {
                    "type": "integer",
                    "example": 100
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.AdminUserInfo"
                    }
                }
            }
        },
        "dto.AuditLogResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer",
                    "example": 20
                },
                "logs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.AuthAuditLog"
                    }
                },
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "total": {
                    "type": "integer",
                    "example": 150
                }
            }
        },
        "dto.AuthAuditLog": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "example": "login"
                },
                "details": {
                    "type": "string",
                    "example": "Login successful"
                },
                "id": {
                    "type": "string",
                    "example": "log_123456789"
                },
                "ip": {
                    "type": "string",
                    "example": "192.168.1.1"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "timestamp": {
                    "type": "string",
                    "example": "2023-01-15T10:30:00Z"
                },
                "user_agent": {
                    "type": "string",
                    "example": "Mozilla/5.0..."
                },
                "user_id": {
                    "type": "string",
                    "example": "usr_123456789"
                }
            }
        },
        "dto.BatchMediaUploadResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "lesson_id": {
                    "type": "string"
                },
                "uploaded_files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.MediaUploadResponse"
                    }
                }
            }
        },
        "dto.ChangePasswordRequest": {
            "type": "object",
            "required": [
                "current_password",
                "new_password"
            ],
            "properties": {
                "current_password": {
                    "type": "string",
                    "example": "OldPass123!"
                },
                "new_password": {
                    "type": "string",
                    "example": "NewPass123!"
                }
            }
        },
        "dto.CharacterCollectionResponse": {
            "type": "object",
            "properties": {
                "characters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.CharacterResponse"
                    }
                },
                "total": {
                    "type": "integer"
                },
                "unlocked": {
                    "type": "integer"
                }
            }
        },
        "dto.CharacterResponse": {
            "type": "object",
            "properties": {
                "achievements": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "birth_year": {
                    "type": "integer"
                },
                "death_year": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "dynasty": {
                    "type": "string"
                },
                "era": {
                    "type": "string"
                },
                "famous_quote": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "is_unlocked": {
                    "type": "boolean"
                },
                "lesson_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "rarity": {
                    "type": "string"
                }
            }
        },
        "dto.CheckLessonStatusRequest": {
            "type": "object",
            "required": [
                "lesson_id"
            ],
            "properties": {
                "lesson_id": {
                    "type": "string"
                }
            }
        },
        "dto.CheckLessonStatusResponse": {
            "type": "object",
            "properties": {
                "can_still_pass": {
                    "type": "boolean"
                },
                "earned_points": {
                    "type": "integer"
                },
                "min_score": {
                    "type": "integer"
                },
                "passed": {
                    "type": "boolean"
                },
                "points_needed": {
                    "type": "integer"
                },
                "questions_answered": {
                    "type": "integer"
                },
                "questions_total": {
                    "type": "integer"
                },
                "remaining_points": {
                    "type": "integer"
                },
                "score": {
                    "type": "integer"
                },
                "total_points": {
                    "type": "integer"
                }
            }
        },
        "dto.CollectionResponse": {
            "type": "object",
            "properties": {
                "achievements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.AchievementResponse"
                    }
                },
                "characters": {
                    "$ref": "#/definitions/dto.CharacterCollectionResponse"
                },
                "stats": {
                    "$ref": "#/definitions/dto.CollectionStatsResponse"
                }
            }
        },
        "dto.CollectionStatsResponse": {
            "type": "object",
            "properties": {
                "completion_rate": {
                    "type": "number"
                },
                "dynasty_breakdown": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "rarity_breakdown": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "total_characters": {
                    "type": "integer"
                },
                "unlocked_characters": {
                    "type": "integer"
                }
            }
        },
        "dto.CompleteLessonRequest": {
            "type": "object",
            "required": [
                "lesson_id",
                "score",
                "time_spent"
            ],
            "properties": {
                "lesson_id": {
                    "type": "string"
                },
                "score": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 0
                },
                "time_spent": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "dto.CompleteLessonResponse": {
            "type": "object",
            "properties": {
                "character_unlock": {
                    "type": "string"
                },
                "leveled_up": {
                    "type": "boolean"
                },
                "new_level": {
                    "type": "integer"
                },
                "spirit_evolved": {
                    "type": "boolean"
                },
                "xp_gained": {
                    "type": "integer"
                }
            }
        },
        "dto.CreateLessonRequest": {
            "type": "object",
            "required": [
                "character_id",
                "order",
                "title"
            ],
            "properties": {
                "can_skip_after": {
                    "type": "integer",
                    "minimum": 0
                },
                "character_id": {
                    "type": "string"
                },
                "has_subtitles": {
                    "type": "boolean"
                },
                "min_score": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 0
                },
                "order": {
                    "type": "integer",
                    "minimum": 1
                },
                "questions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.CreateQuestionRequest"
                    }
                },
                "story": {
                    "type": "string",
                    "maxLength": 5000
                },
                "subtitle_url": {
                    "type": "string"
                },
                "thumbnail_url": {
                    "type": "string"
                },
                "title": {
                    "type": "string",
                    "maxLength": 200,
                    "minLength": 1
                },
                "video_duration": {
                    "type": "integer",
                    "minimum": 1
                },
                "video_url": {
                    "type": "string"
                },
                "xp_reward": {
                    "type": "integer",
                    "maximum": 1000,
                    "minimum": 1
                }
            }
        },
        "dto.CreateQuestionRequest": {
            "type": "object",
            "required": [
                "answer",
                "points",
                "question",
                "type"
            ],
            "properties": {
                "answer": {},
                "id": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "options": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "points": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "question": {
                    "type": "string",
                    "maxLength": 1000,
                    "minLength": 1
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "multiple_choice",
                        "true_false",
                        "fill_blank",
                        "matching"
                    ]
                }
            }
        },
        "dto.CreateSessionRequest": {
            "type": "object",
            "required": [
                "device_id"
            ],
            "properties": {
                "device_id": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                }
            }
        },
        "dto.ForgotPasswordRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                }
            }
        },
        "dto.HeartStatusResponse": {
            "type": "object",
            "properties": {
                "ads_watched_today": {
                    "type": "integer"
                },
                "can_watch_ad": {
                    "type": "boolean"
                },
                "hearts": {
                    "type": "integer"
                },
                "max_hearts": {
                    "type": "integer"
                },
                "next_reset_time": {
                    "type": "string"
                }
            }
        },
        "dto.LeaderboardResponse": {
            "type": "object",
            "properties": {
                "current_user": {
                    "$ref": "#/definitions/dto.LeaderboardUserResponse"
                },
                "period": {
                    "type": "string"
                },
                "top_users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.LeaderboardUserResponse"
                    }
                }
            }
        },
        "dto.LeaderboardUserResponse": {
            "type": "object",
            "properties": {
                "level": {
                    "type": "integer"
                },
                "rank": {
                    "type": "integer"
                },
                "spirit_stage": {
                    "type": "integer"
                },
                "spirit_type": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "xp": {
                    "type": "integer"
                }
            }
        },
        "dto.LessonAccessResponse": {
            "type": "object",
            "properties": {
                "can_access": {
                    "type": "boolean"
                },
                "hearts_needed": {
                    "type": "integer"
                },
                "reason": {
                    "type": "string"
                }
            }
        },
        "dto.LessonMediaResponse": {
            "type": "object",
            "properties": {
                "lesson_id": {
                    "type": "string"
                },
                "media": {
                    "description": "key: video, subtitle, thumbnail",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/dto.MediaAssetResponse"
                    }
                }
            }
        },
        "dto.LessonResponse": {
            "type": "object",
            "properties": {
                "can_skip_after": {
                    "type": "integer"
                },
                "character": {
                    "$ref": "#/definitions/dto.CharacterResponse"
                },
                "character_id": {
                    "type": "string"
                },
                "has_subtitles": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "min_score": {
                    "type": "integer"
                },
                "order": {
                    "type": "integer"
                },
                "questions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.QuestionResponse"
                    }
                },
                "story": {
                    "type": "string"
                },
                "subtitle_url": {
                    "type": "string"
                },
                "thumbnail_url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "video_duration": {
                    "type": "integer"
                },
                "video_url": {
                    "description": "Media Content",
                    "type": "string"
                },
                "xp_reward": {
                    "type": "integer"
                }
            }
        },
        "dto.LoginRequest": {
            "type": "object",
            "required": [
                "email_or_username",
                "password"
            ],
            "properties": {
                "device_id": {
                    "type": "string",
                    "example": "device_12345"
                },
                "email_or_username": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "SecurePass123!"
                },
                "remember_me": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "dto.LoginResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                },
                "expires_in": {
                    "type": "integer",
                    "example": 900
                },
                "refresh_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                },
                "session_id": {
                    "type": "string",
                    "example": "sess_123456789"
                },
                "user": {
                    "$ref": "#/definitions/dto.UserInfo"
                }
            }
        },
        "dto.MediaAssetResponse": {
            "type": "object",
            "properties": {
                "duration": {
                    "description": "seconds",
                    "type": "integer"
                },
                "file_size": {
                    "type": "integer"
                },
                "height": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "width": {
                    "type": "integer"
                }
            }
        },
        "dto.MediaUploadResponse": {
            "type": "object",
            "properties": {
                "file_name": {
                    "type": "string"
                },
                "file_size": {
                    "type": "integer"
                },
                "file_type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "dto.QuestionResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "options": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "points": {
                    "type": "integer"
                },
                "question": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.RefreshTokenRequest": {
            "type": "object",
            "required": [
                "refresh_token"
            ],
            "properties": {
                "refresh_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                }
            }
        },
        "dto.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "SecurePass123!"
                },
                "username": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 3,
                    "example": "johndoe"
                }
            }
        },
        "dto.RegisterResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Registration successful. Please check your email for verification."
                },
                "requires_verification": {
                    "type": "boolean",
                    "example": true
                },
                "user_id": {
                    "type": "string",
                    "example": "usr_123456789"
                }
            }
        },
        "dto.ResendVerificationRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                }
            }
        },
        "dto.ResetPasswordRequest": {
            "type": "object",
            "required": [
                "new_password",
                "token"
            ],
            "properties": {
                "new_password": {
                    "type": "string",
                    "example": "NewPass123!"
                },
                "token": {
                    "type": "string",
                    "example": "reset_token_abc123"
                }
            }
        },
        "dto.SearchResponse": {
            "type": "object",
            "properties": {
                "characters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.CharacterResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "dto.SecuritySettings": {
            "type": "object",
            "properties": {
                "backup_codes_generated": {
                    "type": "boolean",
                    "example": false
                },
                "last_password_change": {
                    "type": "string",
                    "example": "2023-01-10T15:30:00Z"
                },
                "login_notifications": {
                    "type": "boolean",
                    "example": true
                },
                "session_timeout": {
                    "type": "integer",
                    "example": 1440
                },
                "two_factor_enabled": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "dto.SessionListResponse": {
            "type": "object",
            "properties": {
                "sessions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UserSessionInfo"
                    }
                },
                "total": {
                    "type": "integer",
                    "example": 3
                }
            }
        },
        "dto.ShareRequest": {
            "type": "object",
            "required": [
                "content",
                "item_id",
                "type"
            ],
            "properties": {
                "content": {
                    "type": "string",
                    "maxLength": 500,
                    "minLength": 1
                },
                "item_id": {
                    "type": "string"
                },
                "type": {
                    "description": "\"achievement\", \"character_unlock\", \"level_up\"",
                    "type": "string",
                    "enum": [
                        "achievement",
                        "character_unlock",
                        "level_up"
                    ]
                }
            }
        },
        "dto.ShareResponse": {
            "type": "object",
            "properties": {
                "platforms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "share_image": {
                    "type": "string"
                },
                "share_text": {
                    "type": "string"
                },
                "share_url": {
                    "type": "string"
                }
            }
        },
        "dto.SpiritResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "stage": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "xp": {
                    "type": "integer"
                },
                "xp_to_next": {
                    "type": "integer"
                }
            }
        },
        "dto.SubmitQuestionAnswerRequest": {
            "type": "object",
            "required": [
                "answer",
                "lesson_id",
                "question_id"
            ],
            "properties": {
                "answer": {},
                "lesson_id": {
                    "type": "string"
                },
                "question_id": {
                    "type": "string"
                }
            }
        },
        "dto.SubmitQuestionAnswerResponse": {
            "type": "object",
            "properties": {
                "can_still_pass": {
                    "type": "boolean"
                },
                "correct": {
                    "type": "boolean"
                },
                "current_score": {
                    "type": "integer"
                },
                "earned_points": {
                    "type": "integer"
                },
                "passed": {
                    "type": "boolean"
                },
                "points": {
                    "type": "integer"
                },
                "points_needed": {
                    "type": "integer"
                },
                "total_points": {
                    "type": "integer"
                }
            }
        },
        "dto.TimelineCollectionResponse": {
            "type": "object",
            "properties": {
                "eras": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.TimelineEraResponse"
                    }
                }
            }
        },
        "dto.TimelineDynastyResponse": {
            "type": "object",
            "properties": {
                "characters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.CharacterResponse"
                    }
                },
                "dynasty": {
                    "type": "string"
                },
                "end_year": {
                    "type": "integer"
                },
                "is_unlocked": {
                    "type": "boolean"
                },
                "progress": {
                    "type": "number"
                },
                "start_year": {
                    "type": "integer"
                }
            }
        },
        "dto.TimelineEraResponse": {
            "type": "object",
            "properties": {
                "dynasties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.TimelineDynastyResponse"
                    }
                },
                "era": {
                    "type": "string"
                },
                "is_unlocked": {
                    "type": "boolean"
                },
                "progress": {
                    "type": "number"
                }
            }
        },
        "dto.UpdateProfileRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "newemail@example.com"
                },
                "username": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 3,
                    "example": "newusername"
                }
            }
        },
        "dto.UpdateSecuritySettingsRequest": {
            "type": "object",
            "properties": {
                "login_notifications": {
                    "type": "boolean",
                    "example": true
                },
                "session_timeout": {
                    "type": "integer",
                    "maximum": 43200,
                    "minimum": 300,
                    "example": 720
                }
            }
        },
        "dto.UserInfo": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2023-01-01T00:00:00Z"
                },
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "email_verified": {
                    "type": "boolean",
                    "example": true
                },
                "id": {
                    "type": "string",
                    "example": "usr_123456789"
                },
                "last_login_at": {
                    "type": "string",
                    "example": "2023-01-15T10:30:00Z"
                },
                "role": {
                    "type": "string",
                    "example": "user"
                },
                "username": {
                    "type": "string",
                    "example": "johndoe"
                }
            }
        },
        "dto.UserProfileResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2023-01-01T00:00:00Z"
                },
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "email_verified": {
                    "type": "boolean",
                    "example": true
                },
                "id": {
                    "type": "string",
                    "example": "usr_123456789"
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "last_login_at": {
                    "type": "string",
                    "example": "2023-01-15T10:30:00Z"
                },
                "last_login_ip": {
                    "type": "string",
                    "example": "192.168.1.1"
                },
                "role": {
                    "type": "string",
                    "example": "user"
                },
                "stats": {
                    "$ref": "#/definitions/dto.UserStats"
                },
                "username": {
                    "type": "string",
                    "example": "johndoe"
                }
            }
        },
        "dto.UserProgressResponse": {
            "type": "object",
            "properties": {
                "completed_lessons": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "hearts": {
                    "type": "integer"
                },
                "last_activity": {
                    "type": "string"
                },
                "last_heart_reset": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "max_hearts": {
                    "type": "integer"
                },
                "recent_achievements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.AchievementResponse"
                    }
                },
                "spirit": {
                    "$ref": "#/definitions/dto.SpiritResponse"
                },
                "streak": {
                    "type": "integer"
                },
                "total_play_time": {
                    "type": "integer"
                },
                "unlocked_characters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "user_id": {
                    "type": "string"
                },
                "xp": {
                    "type": "integer"
                },
                "xp_to_next_level": {
                    "type": "integer"
                }
            }
        },
        "dto.UserSessionInfo": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2023-01-15T10:30:00Z"
                },
                "device_id": {
                    "type": "string",
                    "example": "device_12345"
                },
                "id": {
                    "type": "string",
                    "example": "sess_123456789"
                },
                "ip": {
                    "type": "string",
                    "example": "192.168.1.1"
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "is_current": {
                    "type": "boolean",
                    "example": false
                },
                "last_used": {
                    "type": "string",
                    "example": "2023-01-15T11:30:00Z"
                },
                "user_agent": {
                    "type": "string",
                    "example": "Mozilla/5.0..."
                }
            }
        },
        "dto.UserStats": {
            "type": "object",
            "properties": {
                "active_sessions": {
                    "type": "integer",
                    "example": 2
                },
                "failed_attempts": {
                    "type": "integer",
                    "example": 0
                },
                "last_password_change": {
                    "type": "string",
                    "example": "2023-01-10T15:30:00Z"
                },
                "total_logins": {
                    "type": "integer",
                    "example": 42
                }
            }
        },
        "dto.ValidateLessonRequest": {
            "type": "object",
            "required": [
                "lesson_id",
                "user_answers"
            ],
            "properties": {
                "lesson_id": {
                    "type": "string"
                },
                "user_answers": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "dto.ValidateLessonResponse": {
            "type": "object",
            "properties": {
                "min_score": {
                    "type": "integer"
                },
                "passed": {
                    "type": "boolean"
                },
                "score": {
                    "type": "integer"
                },
                "total_points": {
                    "type": "integer"
                }
            }
        },
        "model.Character": {
            "type": "object"
        },
        "shared.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
