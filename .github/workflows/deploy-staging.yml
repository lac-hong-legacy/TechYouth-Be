name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

env:
  GO_VERSION: '1.24'
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

jobs:
  build:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Image
        id: build_push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/ven-api:latest
            ghcr.io/${{ github.repository_owner }}/ven-api:${{ github.sha }}
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            GITHUB_TOKEN=${{ secrets.GO_PRIVATE_TOKEN || secrets.GITHUB_TOKEN }}
          secrets: |
            GIT_AUTH_TOKEN=${{ secrets.GO_PRIVATE_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Verify push
        run: |
          echo "‚úÖ Image pushed to GHCR with digest: ${{ steps.build_push.outputs.digest }}"

  deploy:
    name: Deploy to Staging
    needs: build
    runs-on: ubuntu-latest
    environment: staging
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: SSH Deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.STAGING_USER }}
          key: ${{ secrets.STAGING_SSH_KEY }}
          port: 22
          script: |
            set -e
            cd /opt/ven-api

            IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/ven-api
            IMAGE_TAG=${{ github.sha }}

            echo "üîê Logging into GHCR..."
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            echo "üì¶ Pulling latest image..."
            docker pull $IMAGE_NAME:$IMAGE_TAG || docker pull $IMAGE_NAME:latest

            echo "‚ôªÔ∏è Restarting container..."
            docker compose down || true
            IMAGE=$IMAGE_NAME:$IMAGE_TAG docker compose up -d --force-recreate --remove-orphans ven-api

            echo "‚úÖ Deployment finished successfully."

      - name: Health Check
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.STAGING_USER }}
          key: ${{ secrets.STAGING_SSH_KEY }}
          port: 22
          script: |
            echo "ü©∫ Checking health endpoint..."
            for i in {1..30}; do
              code=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8000/ping || echo 000)
              if [ "$code" = "200" ]; then
                echo "‚úÖ Health check passed after ${i}s"
                exit 0
              fi
              echo "Attempt $i/30 failed with HTTP $code, retrying..."
              sleep 1
            done
            echo "‚ùå Health check failed after 30s"
            exit 1
